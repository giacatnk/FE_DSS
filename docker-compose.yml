version: '3.8'

services:
  # Frontend dependency stage
  # fe-deps:
  #   build:
  #     context: ./fe
  #     dockerfile: Dockerfile
  #     target: deps
  #   image: aceso-fe-deps:latest

  # frontend:
  #   build:
  #     context: ./fe
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./fe/src:/app/src
  #     - ./fe/public:/app/public
  #     - /app/node_modules
  #   environment:
  #     - NODE_ENV=development
  #   depends_on:
  #     - fe-deps
  #     - backend
  #   networks:
  #     - app-network

  # Backend dependency stage - this will be cached
  be-deps:
    build:
      context: ./be
      dockerfile: Dockerfile
      target: runtime-deps
    image: aceso-be-deps:latest  # Important: fixed tag for caching

  backend:
    build:
      context: ./be
      dockerfile: Dockerfile
      target: final
      cache_from:  # Use cached deps
        - aceso-be-deps:latest
    ports:
      - "8000:8000"
    volumes:
      - ./be:/app
      - ./be/data:/app/data
    environment:
      - PYTHONUNBUFFERED=1
      - DJANGO_SETTINGS_MODULE=config.settings
      - ML_API_URL=http://ml:8000
    depends_on:
      - be-deps
      - ml
      - source_db
    networks:
      - app-network

  ml:
      build:
        context: ./ml
        dockerfile: Dockerfile
      ports:
        - "8080:8000"  # Expose the API server
      volumes:
        - ./ml/data:/app/data
      #   - ./ml/models:/app/models
      environment:
        - PYTHONUNBUFFERED=1
      networks:
        - app-network

  source_db:
    image: postgres:15
    volumes:
      - source_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"  # Expose the API server
    environment:
      - POSTGRES_DB=source_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  source_db_data: